name: CI/CD - Flask Docker App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: flaskdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ⬇️ Checkout do código
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🐳 Validar Dockerfile
        run: docker build -t flask-app .

      - name: 🐬 Instalar cliente MySQL
        run: sudo apt-get install -y mysql-client

      - name: ⏳ Aguardar MySQL estar pronto
        run: |
          echo "Aguardando o MySQL iniciar..."
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
              echo "MySQL está pronto!"
              break
            fi
            echo "Esperando MySQL..."
            sleep 5
          done

      - name: ✅ Testar conexão com banco MySQL
        run: mysql -h 127.0.0.1 -u root -proot -e "SHOW DATABASES;"
      
      - name: 🧪 Generate tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: charlesthomaz/flask-app-ci:${{steps.generate-tag.outputs.sha}},charlesthomaz/flask-app-ci:latest       
      
      
      # - name: Build docker image
      #   run: docker build -t charlesthomaz/flask-app-ci:${{steps.generate-tag.outputs.sha}} .

      # - name: Push docker image
      #   run: docker push charlesthomaz/flask-app-ci:${{steps.generate-tag.outputs.sha}}  