name: CI/CD - Flask Docker App

# 🚀 Quando essa pipeline será executada
on:
  push:
    branches: [ "main" ]  # Quando houver push na branch principal
  pull_request:
    branches: [ "main" ]  # Quando alguém abrir um PR para a branch principal

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Máquina virtual que executa a pipeline

    # 🔌 Serviços auxiliares (como o banco de dados MySQL)
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: flaskdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:

      ### 1. ⬇️ Baixar o código do repositório
      - name: Checkout do código
        uses: actions/checkout@v3

      ### 2. 🐍 Preparar o ambiente Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      ### 3. 📦 Instalar as dependências do projeto
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      ### 4. 🕵️‍♂️ Verificar se o MySQL está pronto
      - name: Esperar o MySQL iniciar
        run: |
          sudo apt-get install -y mysql-client
          echo "Aguardando o MySQL iniciar..."
          for i in {1..10}; do
            if mysqladmin ping -h mysql -uroot -proot --silent; then
              echo "MySQL está pronto!"
              break
            fi
            echo "Esperando MySQL..."
            sleep 5
          done

      ### 5. 🧪 Testar conexão com o banco
      - name: Testar conexão com banco MySQL
        run: |
          mysql -h mysql -u root -proot -e "SHOW DATABASES;"

      ### 6. 🧪 (Opcional) Rodar testes automatizados
      # - name: Executar testes
      #   run: |
      #     pytest  # ou outro framework que você estiver usando

      ### 7. 🐳 Validar o Dockerfile (build da imagem)
      - name: Build da imagem Docker
        run: docker build -t flask-app .

      ### 8. (Opcional) Push para DockerHub ou Deploy
      # - name: Push para DockerHub
      #   run: docker push seu-usuario/seu-repositorio
